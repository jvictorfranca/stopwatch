{"version":3,"sources":["Components/Watch.js","Components/UnitsInput.js","Components/Video/ScreamingGoat.mp4","Components/Video/giphy.gif","Components/CountSheep.js","Components/StopWatch.js","App.js","reportWebVitals.js","index.js"],"names":["Watch","number","string","answer","toString","length","rest","this","props","units","days","Math","floor","stringDays","fixString","hours","stringHours","minutes","seconds","dSeconds","className","React","Component","UnitsInput","state","inputValue","handleData","bind","sendUpdatedValues","event","target","name","value","setState","updateValues","type","min","onChange","onClick","CountingSheep","src","gif","alt","StopWatch","startingUnits","stopWatchShow","videoShow","playing","startCount","stopCount","resetUnits","setStartUnits","handleCheckbox","playVideo","videoEnd","showStartVideo","counting","showSheep","countConstant","setInterval","prevState","clearInterval","undefined","forceUpdate","a","checked","url","video","width","height","onEnded","volume","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13f7b82e.chunk.js","sourcesContent":["import React from 'react'\nimport './Watch.css'\n\nclass Watch extends React.Component{\n  fixString(number){\n    let string = number\n    let answer;\n    string = number.toString()\n    answer = string\n    if (string.length === 1)\n    {answer = `0${string}`}\n    return answer\n  }\n  render () {\n   const {units} = this.props \n   let rest = units\n   let days = Math.floor(rest/864000)\n   rest -= days*864000\n   const stringDays = this.fixString(days)\n   let hours = Math.floor(rest/36000)\n   rest -= hours*36000\n   const stringHours = this.fixString(hours)\n   let minutes = Math.floor(rest/600)\n   rest -= minutes*600\n   minutes = this.fixString(minutes)\n   let seconds = Math.floor(rest/10)\n   rest -= seconds*10\n   seconds = this.fixString(seconds)\n   let dSeconds = rest\n    return(\n\n      <main className='stopWatch'> \n        <section className='container'>\n          <div className='number little'>:{dSeconds}</div>\n          <div className='number'>{seconds}</div>\n          <div className='number'>{minutes}:</div>\n          {hours > 0  && <div className='number'>{stringHours}h: </div>}\n          {days > 0 && <div className='number'>{stringDays}d: </div>}\n        </section>\n\n        \n        </main>\n    )\n  }\n}\n\nexport default Watch","import React from 'react';\nimport './UnitsInput.css'\n\nclass UnitsInput extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      inputValue: ''\n    }\n    this.handleData = this.handleData.bind(this)\n    this.sendUpdatedValues = this.sendUpdatedValues.bind(this)\n  }\n  handleData (event) {\n    const {name, value} = event.target\n    \n    this.setState(()=>({\n      [name]: value\n    }))\n  }\n  sendUpdatedValues(){\n    let value = this.state.inputValue\n    value = value*600\n    this.props.updateValues(value)\n    this.setState({\n      inputValue:''\n    })\n  }\n  render(){\n   const {inputValue} = this.state\n    return (\n      <section>\n      <input type=\"number\" name='inputValue' min='0' value={inputValue} onChange={this.handleData} />\n      <button onClick={this.sendUpdatedValues}>Set minutes</button>\n      </section>\n      \n    )\n  }\n}\n\nexport default UnitsInput","export default __webpack_public_path__ + \"static/media/ScreamingGoat.f33e6429.mp4\";","export default __webpack_public_path__ + \"static/media/giphy.59c1076e.gif\";","import React from 'react'\nimport './StopWatch.css'\nimport gif from './Video/giphy.gif'\n\n\n\nclass CountingSheep extends React.Component{\nrender () {\n  return(\n    <div className=\"sheeps\">\n          <img src={gif} alt=\"\" className='sheep'/>\n      </div>\n  )\n}\n}\n\nexport default CountingSheep","import React from 'react'\nimport Watch from './Watch'\nimport UnitsInput from './UnitsInput'\nimport video from './Video/ScreamingGoat.mp4'\n\nimport ReactPlayer from \"react-player\";\nimport './StopWatch.css'\nimport CountingSheep from './CountSheep';\n\nclass StopWatch extends React.Component {\n  constructor(props){\n    super(props)\n      this.state = {\n        units: 0,\n        startingUnits: 0,\n        stopWatchShow: true,\n        videoShow: false,\n        playing: false,\n      }  \n      this.startCount = this.startCount.bind(this)\n      this.stopCount = this.stopCount.bind(this)\n      this.resetUnits = this.resetUnits.bind(this)\n      this.setStartUnits = this.setStartUnits.bind(this)\n      this.handleCheckbox = this.handleCheckbox.bind(this)\n      this.playVideo = this.playVideo.bind(this)\n      this.videoEnd = this.videoEnd.bind(this)\n      this.showStartVideo = this.showStartVideo.bind(this)\n\n      this.counting = false\n      this.showSheep = false\n\n  }\n  \n  componentDidUpdate(){\n    if (this.state.units === 0 && this.counting) {\n      this.stopCount() \n      this.showStartVideo()\n       \n    }\n  }\n  startCount () {\n    if (this.state.units>0 && !this.countConstant){\n      this.counting = true\n      this.showSheep = true\n      this.countConstant = setInterval(()=>{\n      this.setState((prevState)=>({\n        units: prevState.units - 1\n      }))\n    }, 100)\n  }\n  }\nstopCount () {\n  clearInterval(this.countConstant)\n  this.countConstant = undefined\n  this.counting = false\n  this.showSheep = false\n  this.forceUpdate()\n}\nresetUnits () {\n  this.setState(()=>({\n    units: this.state.startingUnits\n  }))\n  this.stopCount()\n}\n\nasync setStartUnits (number) {\n   this.setState(()=>({\n    startingUnits: number\n  }), ()=>{\n  this.resetUnits()\n  })}\n\n  handleCheckbox (event) {\n    let value = event.target.checked\n    this.setState({\n      stopWatchShow: value\n    })\n  }\n\n  playVideo () {\n    this.setState({\n      playing:true\n    })\n  }\n\n  videoEnd() {\n    this.setState(()=>({\n      videoShow:false,\n      stopWatchShow: true,\n      units:0\n    }))\n  }\n\n  showStartVideo () {\n    this.setState(()=>({\n      videoShow: true,\n      stopWatchShow: false\n    }), ()=>{\n      this.playVideo()\n    })\n  }\n\n  render () {\n    const {units} = this.state\n   return (\n\n   <div>\n     {/* <label htmlFor=\"show\">\n       Show stopwatch\n     <input type=\"checkbox\" name='show' onChange={this.handleCheckbox} checked={stopWatchShow}/>\n     </label> */}\n { this.state.stopWatchShow && <main>\n     <UnitsInput updateValues={this.setStartUnits}></UnitsInput>\n    <div className='side-buttons'>\n      <div className='button-container'>\n          <button onClick={this.startCount}>Start</button>\n          <button onClick={this.stopCount}>Stop</button>\n          <button onClick={this.resetUnits}>Reset</button>\n      </div>\n     <Watch  units= {units}></Watch>\n    </div>\n    {this.showSheep && <CountingSheep />}\n   </main>\n   }\n   {this.state.videoShow && <ReactPlayer\n    url={video}\n    width=\"100%\"\n    height=\"100%\"\n    playing={this.state.playing}\n    onEnded={this.videoEnd}\n    volume = '0.2'\n     />}\n   \n   </div>\n   )\n  }\n}\n\nexport default StopWatch","import './App.css';\nimport StopWatch from './Components/StopWatch';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StopWatch></StopWatch>      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}